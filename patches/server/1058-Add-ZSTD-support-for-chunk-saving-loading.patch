From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ethan Chan <ethanchan7981@gmail.com>
Date: Tue, 3 Sep 2024 05:42:27 -0400
Subject: [PATCH] Add ZSTD support for chunk saving/loading


diff --git a/build.gradle.kts b/build.gradle.kts
index 3588770a9ea6ee0a9508b218758650f43d994715..96044629cc10d43750322b18d55b62d280388729 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -33,6 +33,7 @@ dependencies {
     implementation("org.apache.logging.log4j:log4j-iostreams:2.22.1") // Paper - remove exclusion
     implementation("org.ow2.asm:asm-commons:9.7")
     implementation("org.spongepowered:configurate-yaml:4.2.0-SNAPSHOT") // Paper - config files
+    implementation("com.github.luben:zstd-jni:1.5.2-2") // zstd
     implementation("commons-lang:commons-lang:2.6")
     runtimeOnly("org.xerial:sqlite-jdbc:3.46.0.0")
     runtimeOnly("com.mysql:mysql-connector-j:8.4.0")
diff --git a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
index 690086adcb1f87adc0b3ab664fde735ad3e1093a..e8bdfcade4fa462ca2b28a885402b4f55ee88ab5 100644
--- a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
@@ -200,6 +200,7 @@ public class GlobalConfiguration extends ConfigurationPart {
         public enum CompressionFormat {
             GZIP,
             ZLIB,
+            ZSTD,
             NONE
         }
     }
diff --git a/src/main/java/net/minecraft/world/level/chunk/storage/RegionFileVersion.java b/src/main/java/net/minecraft/world/level/chunk/storage/RegionFileVersion.java
index f4a39f49b354c560d614483db1cd3dfc154e94b4..22027850dce4594185f1caaf8c8836f38e546dd5 100644
--- a/src/main/java/net/minecraft/world/level/chunk/storage/RegionFileVersion.java
+++ b/src/main/java/net/minecraft/world/level/chunk/storage/RegionFileVersion.java
@@ -1,10 +1,5 @@
 package net.minecraft.world.level.chunk.storage;
 
-import com.mojang.logging.LogUtils;
-import it.unimi.dsi.fastutil.ints.Int2ObjectMap;
-import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
-import it.unimi.dsi.fastutil.objects.Object2ObjectMap;
-import it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap;
 import java.io.BufferedOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
@@ -13,11 +8,22 @@ import java.util.zip.DeflaterOutputStream;
 import java.util.zip.GZIPInputStream;
 import java.util.zip.GZIPOutputStream;
 import java.util.zip.InflaterInputStream;
+
 import javax.annotation.Nullable;
+
+import org.slf4j.Logger;
+
+import com.github.luben.zstd.ZstdInputStream;
+import com.github.luben.zstd.ZstdOutputStream;
+import com.mojang.logging.LogUtils;
+
+import it.unimi.dsi.fastutil.ints.Int2ObjectMap;
+import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
+import it.unimi.dsi.fastutil.objects.Object2ObjectMap;
+import it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap;
 import net.jpountz.lz4.LZ4BlockInputStream;
 import net.jpountz.lz4.LZ4BlockOutputStream;
 import net.minecraft.util.FastBufferedInputStream;
-import org.slf4j.Logger;
 
 public class RegionFileVersion {
     private static final Logger LOGGER = LogUtils.getLogger();
@@ -45,12 +51,20 @@ public class RegionFileVersion {
             stream -> new BufferedOutputStream(new LZ4BlockOutputStream(stream))
         )
     );
+    public static final RegionFileVersion VERSION_ZSTD = register(
+        new RegionFileVersion(
+            3,
+            "zstd",
+            stream -> new FastBufferedInputStream(new ZstdInputStream(stream)),
+            stream -> new BufferedOutputStream(new ZstdOutputStream(stream))
+        )
+    );
     public static final RegionFileVersion VERSION_CUSTOM = register(new RegionFileVersion(127, null, stream -> {
         throw new UnsupportedOperationException();
     }, stream -> {
         throw new UnsupportedOperationException();
     }));
-    public static final RegionFileVersion DEFAULT = VERSION_DEFLATE;
+    public static final RegionFileVersion DEFAULT = VERSION_ZSTD;
     private static volatile RegionFileVersion selected = DEFAULT;
     private final int id;
     @Nullable
@@ -63,6 +77,7 @@ public class RegionFileVersion {
         return switch (io.papermc.paper.configuration.GlobalConfiguration.get().unsupportedSettings.compressionFormat) {
             case GZIP -> VERSION_GZIP;
             case ZLIB -> VERSION_DEFLATE;
+            case ZSTD -> VERSION_ZSTD;
             case NONE -> VERSION_NONE;
         };
     }
